{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Start Here","text":""},{"location":"#goals","title":"Goals","text":"<ul> <li>Learn stuff, hands-on, like Kubernetes, GitOps, networking (SSL, VLANs, DNS, DHCP), and routing (hardware, OSS)</li> <li>Keep it low(ish) power, with backups and smart server power control</li> <li>Have access to VMs for prototyping and development</li> <li>Host all of my favorite local apps</li> <li>Make it all easily deployable and as \"highly available\" as possible for a homelab</li> </ul>"},{"location":"#feature-checklist","title":"Feature Checklist","text":"<ul> <li> SSO</li> <li> System monitoring</li> <li> GitOps management</li> <li> Power monitoring and management</li> <li> Automated node creation/provisioning</li> <li> Service tunnel</li> <li> Distributed storage</li> <li> DNS for easy local domain names</li> <li> A nice dashboard to link everything together</li> </ul>"},{"location":"#software","title":"Software","text":"<ul> <li>OPNsense for routing</li> <li>TrueNAS for networked storage and backups (s3, NFS)</li> <li>Proxmox For virtualization on nodes</li> </ul>"},{"location":"#k8s-apps","title":"K8s Apps","text":"<ul> <li>Homebridge for HomeKit control of most smart devices</li> <li>Zigbee2MQTT for MQTT control of Zigbee devices<sup>1</sup></li> <li>Zwavejs2MQTT for MQTT control of Zwave devices<sup>1</sup></li> <li>Grafana for dashboards</li> <li>Prometheus for monitoring</li> <li>InfluxDB for storage</li> <li>Omada Controller for AP management</li> </ul> <ol> <li> <p>These applications will need to be stuck to the nodes with attached Zwave and Zigbee USB dongles!\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"tasks/","title":"Task Breakdown","text":""},{"location":"tasks/#stage-0-prep","title":"Stage 0: Prep","text":"<ul> <li> Set up rack with switch, UPS</li> <li> Build router on HP 600 G3 (SFF)</li> <li> Set up a few devices in new network</li> <li> Design 3D printed rack mount for HP SFF PCs</li> <li> Design 3D printed rack mount for Dell SFF</li> <li> Create (this) website for documentation<ul> <li> Add GH actions automation for deployment</li> <li> Add GH actions for PR requirements (spellchecker, secrets checking, etc)</li> </ul> </li> </ul>"},{"location":"tasks/#stage-1-mvp","title":"Stage 1: MVP","text":"<ul> <li> Install Proxmox on worker nodes</li> <li> Port full home network over to OPNsense</li> <li> Set up TrueNAS on HP SFF</li> <li> Set up local DNS</li> <li> Set up k3s deployment<ul> <li> Use Ansible to configure clients/workers</li> <li> Do some test deployments<ul> <li> Mosquitto</li> </ul> </li> <li> Set up monitoring (unsure what service to use)</li> </ul> </li> </ul>"},{"location":"tasks/#stage-2-automatescale","title":"Stage 2: Automate/Scale","text":"<ul> <li> Automate worker node deployment</li> <li> Integrate GitOps</li> <li> Move current suite of docker services to k3s (my \"Prod\" environment)</li> </ul>"},{"location":"tasks/#stage-3-add-new-services","title":"Stage 3: Add new services","text":"<ul> <li> [New services go here]</li> <li> Learn website dev through selfhosted webpage</li> <li> Set up power saving options</li> </ul>"},{"location":"tasks/#stage-x-bonus","title":"Stage X: Bonus","text":"<ul> <li> Get disk shelf (that I got for free) working</li> <li> Design/implement power management<ul> <li> Implement device safe shutdown during power loss</li> <li> Implement \"peak pricing\" usage reduction and battery backup cycle</li> </ul> </li> <li> Set up self hosted GitHub agents</li> </ul>"},{"location":"hardware/hp_mini/","title":"Hp mini","text":"<p>I picked up about 40 of these from a local source and sold most of them, but kept a few for this lab. They can be had for about $30 USD, and mine have 8GB of DDR4 RAM and some used 256GB assorted brand NVMe drives. I have dedicated (2) G3 600 i3-6100T for routing and storage, and (2) G3 400 i5-6500T (pictured) as general purpose server nodes. This formfactor (laptop hardware in a tiny desktop chassis) is popular for homelabs, so my main reasoning for using them is 1. they are cheap and 2. typically only draw 15W.</p>"},{"location":"projects/DIY_Router/","title":"Router","text":"<p>1x HP Mini G3 600 i3-6100T 256GB NVMe 8GB DDR4 Intel 210 NIC 1xGBe NIC</p>"},{"location":"projects/DIY_Router/#hardware","title":"Hardware","text":""},{"location":"projects/DIY_Router/#prototype","title":"Prototype","text":"<p>Since the NIC I originally purchased was bad, I used a USB NIC to test the setup. Although most suggest against using USB NICs due to reliability issues, I had great performance. I didn't get around to testing speed or latency, but it performed equivalently to my Asus RT-AC68U router. </p>"},{"location":"projects/DIY_Router/#software","title":"Software","text":""},{"location":"projects/DIY_Router/#opnsense","title":"OPNsense","text":""},{"location":"projects/DIY_Router/#unbound-dns","title":"Unbound DNS","text":""},{"location":"projects/k3s_deployment/","title":"Deploying K3s","text":"<p>There are so many great resources online, ranging from low-level, piece-by-piece deployments to fully automated, turn-key solutions. I am going to more automated route, following a series of tutorials from Techno Tim on YouTube. </p>"},{"location":"projects/k3s_deployment/#steps","title":"Steps:","text":"<ol> <li> <p>Set up VMs on Proxmox</p> <p>Configuration: - HP Mini 1 (32GB RAM)     - 2x master nodes, 2 vCPU, 8GB RAM, 32GB disk     - 1x worker node, 2 vCPU, 8GB RAM, 32GB disk - HP Mini 2 (8GB RAM)     - 2x master nodes, 2 vCPU, 8GB RAM, 32GB disk     - 1x worker node, 2 vCPU, 8GB RAM, 32GB disk</p> <p>This configuration allows for HA with 2 master nodes on each proxmox host. </p> <p>Notes:</p> <ul> <li>I do not currently have a Proxmox cluster set up between these two nodes. It would be nice from a management perspective to have a single interface to manage both nodes, but I would rather continue to build up features before exploring this.</li> <li>Increased the scsi0 drive to ~32GB prior to replicating the template. I originally used the default, and 2GB ran into issues during the next step when installing k3s.</li> <li>Allocated 8GB of RAM for the template over the default 2GB.</li> <li>Set up DHCP static IP in OPNsense LAN leases for each node.</li> </ul> </li> <li> <p>Set up Ansible</p> <p>Notes: - I utilized the site.yml and reset.yml quite a bit when setting up my nodes. Between updating memory allocation, disk size and master/worker node allocation, having a method to reset the cluster, update the hosts.ini, this came in handy.</p> </li> <li> <p>Set up K3s</p> <p>Notes:</p> <ul> <li>Unless you use the <code>master</code> and <code>node</code> tags in the hosts.ini, the playbook required some updating of the default master, node, and cluster tags in a few places to get all stages to get the correct host groups for each stage.</li> </ul> </li> <li> <p>Install Helm</p> <p><code>bash brew install helm</code></p> </li> <li> <p>Set up Longhorn</p> <p>This tutorial was a bit tailored to setup with Rancher, so I preferred the Longhorn install that was more than sufficient to wask through what is required. </p> </li> <li> <p>Install HAProxy     See the HAProxy section here</p> </li> </ol>"},{"location":"projects/longhorn/","title":"Longhorn","text":"<p>Todo</p>"},{"location":"projects/mosquitto/","title":"Mosquitto","text":""},{"location":"projects/mosquitto/#overview","title":"Overview","text":"<p>This is my first deployment! Therefore I'm doing it \"manually\" before setting up gitops. </p>"},{"location":"projects/mosquitto/#references","title":"References","text":""}]}